[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'Shougo/neoyank.vim'

[[plugins]]
repo = 'nixprime/cpsm'
build = 'sh -c "PY3=ON ./install.sh"'

[[plugins]]
repo = 'Shougo/denite.nvim'
depends = ['neomru.vim', 'neoyank.vim', 'nixprime/cpsm']
hook_add = '''
    nnoremap <silent> <C-p>      :<C-u>Denite file/rec -start-filter -vertical-preview -auto-action=preview <CR>
    nnoremap <silent> <C-f>      :<C-u>Denite grep -vertical-preview -auto-action=preview <CR>
    nnoremap <silent> <C-m>      :<C-u>Denite file_mru -vertical-preview -auto-action=preview <CR>
    nnoremap <silent> <C-y>      :<C-u>Denite neoyank <CR>

    nnoremap <silent> <C-w>f     :<C-u>DeniteCursorWord grep -vertical-preview -auto-action=preview <CR>
    nnoremap <silent> <C-w><C-f> :<C-u>DeniteCursorWord grep -vertical-preview -auto-action=preview <CR>
    nnoremap <silent> <C-w>r     :<C-u>Denite -resume -vertical-preview -auto-action=preview <CR>
    nnoremap <silent> <C-w><C-r> :<C-u>Denite -resume -vertical-preview -auto-action=preview <CR>
    nnoremap <silent> <C-w>l     :<C-u>Denite -resume -immediately -select=+1 <CR>
    nnoremap <silent> <C-w><C-l> :<C-u>Denite -resume -immediately -select=+1 <CR>
    nnoremap <silent> <C-w>h     :<C-u>Denite -resume -immediately -select=-1 <CR>
    nnoremap <silent> <C-w><C-h> :<C-u>Denite -resume -immediately -select=-1 <CR>

    autocmd FileType denite call s:denite_my_settings()
    function! s:denite_my_settings() abort
      nnoremap <silent><buffer><expr> <CR> denite#do_map('do_action')
      nnoremap <silent><buffer><expr> d denite#do_map('do_action', 'delete')
      nnoremap <silent><buffer><expr> p denite#do_map('do_action', 'preview')
      nnoremap <silent><buffer><expr> q denite#do_map('quit')
      nnoremap <silent><buffer><expr> i denite#do_map('open_filter_buffer')
      nnoremap <silent><buffer><expr> <Space> denite#do_map('toggle_select').'j'
    endfunction
    autocmd FileType denite-filter call s:denite_filter_my_settings()
    function! s:denite_filter_my_settings() abort
      imap <silent><buffer> <C-o> <Plug>(denite_filter_quit)
    endfunction
'''

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
  nnoremap <silent><C-n> :<C-u>NERDTreeToggle<CR>
  nnoremap <silent><C-b> :<C-u>NERDTreeFind<CR>
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
    let g:deoplete#enable_at_startup = 1
'''

[[plugins]]
repo = 'w0ng/vim-hybrid'
hook_add = '''
  set background=dark
  au MyAutoCmd VimEnter * nested colorscheme hybrid
'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']

[[plugins]]
repo = 'tbodt/deoplete-tabnine'
build = './install.sh'

[[plugins]]
repo = "tpope/vim-fugitive"

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'
hook_add = '''
  let g:go_fmt_command = 'goimports'
  let g:go_metalinter_autosave = 0
  let g:go_metalinter_autosave_enabled = [
    \ 'vet', 'errcheck', 'gosec', 'unconvert',
    \ ]
  let g:go_metalinter_enabled = [
    \ 'vet', 'errcheck', 
    \ 'rowserrcheck', 'gosec',
    \ 'interfacer', 'unconvert',
    \ 'dupl', 'goconst',
    \ 'gocyclo', 'gocognit',
    \ 'maligned', 'depguard',
    \ 'misspell', 
    \ 'unparam', 'dogsled',
    \ 'nakedret', 'prealloc',
    \ 'scopelint', 'gocritic',
    \ 'gochecknoinits', 'gochecknoglobals',
    \ ]
  let g:go_highlight_functions = 1
  let g:go_highlight_methods = 1
  let g:go_highlight_structs = 1
  let g:go_highlight_operators = 1
  let g:go_highlight_array_whitespace_error = 1
  let g:go_highlight_chan_whitespace_error = 1
  let g:go_highlight_extra_types = 1
  let g:go_highlight_space_tab_error = 1
  let g:go_highlight_trailing_whitespace_error = 1
  let g:go_highlight_function_parameters = 1
  let g:go_highlight_function_calls = 1
  let g:go_highlight_types = 1
  let g:go_highlight_fields = 1
  let g:go_highlight_variable_declarations = 1
  let g:go_highlight_variable_assignments = 1
'''

#[[plugins]]
#repo = 'w0rp/ale'

[[plugins]]
repo = 'itchyny/lightline.vim'

[[plugins]]
repo = 'posva/vim-vue'

[[plugins]]
repo = "editorconfig/editorconfig-vim"

[[plugins]]
repo = 'simeji/winresizer'

[[plugins]]
repo = 'sheerun/vim-polyglot'
hook_add = '''
  let g:polyglot_disabled = ['markdown', 'tsx', 'typescript', 'csv']
'''

[[plugins]]
repo = 'dense-analysis/ale'
hook_add = '''
  let g:ale_completion_enabled = 1
  let g:ale_fix_on_save = 1
  let g:ale_linters = {
  \   '*': ['remove_trailing_lines', 'trim_whitespace'],
  \   'javascript': ['eslint'],
  \   'typescript': ['eslint', 'prettier'],
  \}

  let g:ale_fixers = {
  \   '*': ['remove_trailing_lines', 'trim_whitespace'],
  \   'javascript': ['eslint'],
  \   'typescript': ['eslint', 'prettier'],
  \}
'''
