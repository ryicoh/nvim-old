[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'scrooloose/nerdtree'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
    let g:deoplete#enable_at_startup = 1
'''

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'Shougo/neoyank.vim'

[[plugins]]
repo = 'Shougo/denite.nvim'
depends = ['neomru.vim', 'neoyank.vim']
on_event = 'BufRead'
hook_add = '''
    nnoremap <silent> <C-p> :<C-u>Denite file/rec -start-filter<CR>
    nnoremap <silent> <C-l> :<C-u>Denite line<CR>
    nnoremap <silent> <C-g> :<C-u>Denite grep<CR>
    nnoremap <silent> <C-m> :<C-u>Denite file_mru<CR>
    nnoremap <silent> <C-y> :<C-u>Denite neoyank<CR>
    nnoremap <silent> <C-b> :<C-u>Denite buffer<CR>
    autocmd FileType denite call s:denite_my_settings()
    function! s:denite_my_settings() abort
      nnoremap <silent><buffer><expr> <CR> denite#do_map('do_action')
      nnoremap <silent><buffer><expr> d denite#do_map('do_action', 'delete')
      nnoremap <silent><buffer><expr> p denite#do_map('do_action', 'preview')
      nnoremap <silent><buffer><expr> q denite#do_map('quit')
      nnoremap <silent><buffer><expr> i denite#do_map('open_filter_buffer')
      nnoremap <silent><buffer><expr> <Space> denite#do_map('toggle_select').'j'
    endfunction
    autocmd FileType denite-filter call s:denite_filter_my_settings()
    function! s:denite_filter_my_settings() abort
      imap <silent><buffer> <C-o> <Plug>(denite_filter_quit)
    endfunction
    let s:denite_win_width_percent = 0.85
    let s:denite_win_height_percent = 0.7

    " Change denite default options
    call denite#custom#option('default', {
        \ 'split': 'floating',
        \ 'winwidth': float2nr(&columns * s:denite_win_width_percent),
        \ 'wincol': float2nr((&columns - (&columns * s:denite_win_width_percent)) / 2),
        \ 'winheight': float2nr(&lines * s:denite_win_height_percent),
        \ 'winrow': float2nr((&lines - (&lines * s:denite_win_height_percent)) / 2),
        \ })

'''
hook_post_source = '''
    call denite#custom#var('file/rec', 'command', ['ag', '--follow', '--nocolor', '--nogroup', '-g', ''])
    call denite#custom#source('file_mru', 'matchers', ['matcher/fuzzy', 'matcher/project_files'])
    call denite#custom#source('file/rec', 'matchers', ['matcher/cpsm'])
    call denite#custom#var('grep', 'command', ['ag'])
    call denite#custom#var('grep', 'default_opts', ['-i', '--vimgrep'])
    call denite#custom#var('grep', 'recursive_opts', [])
    call denite#custom#var('grep', 'pattern_opt', [])
    call denite#custom#var('grep', 'separator', ['--'])
    call denite#custom#var('grep', 'final_opts', [])
'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
  set signcolumn=yes
  set updatetime=1000
  nnoremap [gitgutter] <Nop>
  nmap <C-h> [gitgutter]
  nmap [gitgutter]j <Plug>GitGutterNextHunk
  nmap [gitgutter]k <Plug>GitGutterPrevHunk
  nmap [gitgutter]u <Plug>GitGutterUndoHunk
'''

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'
hook_add = '''
let g:go_fmt_command = 'goimports'
let g:go_metalinter_autosave_enabled = ['vet', 'golint']
'''

[[plugins]]
repo = 'othree/yajs.vim'
on_ft = ['javascript', 'vue']

[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
let g:ale_linters = {
  \ 'html': [],
  \ 'css': ['stylelint'],
  \ 'javascript': ['eslint'],
  \ 'vue': ['eslint']
  \ }
let g:ale_linter_aliases = {'vue': 'css'}
'''

[[plugins]]
repo = 'itchyny/lightline.vim'

[[plugins]]
repo = 'w0ng/vim-hybrid'
hook_add = '''
  set background=dark
  au MyAutoCmd VimEnter * nested colorscheme hybrid
'''
